{"version":3,"sources":["useRMScroll.js","utils.js","redux/actionTypes.js","components/CharCard.jsx","pages/FirstPage.jsx","redux/actions.js","components/CharDetails.jsx","pages/SecondPage.jsx","App.jsx","reportWebVitals.js","redux/reducer.js","redux/store.js","index.jsx"],"names":["useRMScroll","pageNumber","useState","loading","setLoading","error","setError","chars","setChars","useEffect","nums","number","j","result","i","push","Math","floor","random","getRandomArray","query","axios","get","then","res","prevChars","data","catch","e","SET_CHAR","CharCard","title","image","Card","header","FirstPage","setPageNumber","observer","useRef","history","useHistory","dispatch","useDispatch","lastCharRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prev","observe","redirectHandler","char","type","payload","setCharAC","className","map","el","index","length","ref","onClick","name","id","CharDetails","props","extraText","status","extra","Icon","color","meta","gender","description","location","SecondPage","state","useSelector","App","basename","Menu","inverted","widths","Item","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2132aca0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getRandomArray, base } from './utils';\n\nexport default function useRMScroll(pageNumber) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [chars, setChars] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    const nums = getRandomArray(671, 4);\n    const query = `character/${nums}`;\n\n    axios.get(`${base}${query}`)\n      .then((res) => {\n        setChars((prevChars) => [...prevChars, ...res.data]);\n        setLoading(false);\n      }).catch((e) => {\n        setError(true);\n      });\n  }, [pageNumber]);\n\n  return { loading, error, chars };\n}\n","// get random number from 1 to number\nexport const getRandomArray = (number, j) => {\n  const result = [];\n  for (let i = 0; i < j; i += 1) {\n    result.push(Math.floor(Math.random() * number) + 1);\n  }\n  return result;\n};\n\n// R&M url base\nexport const base = 'https://rickandmortyapi.com/api/';\n","export const SET_CHAR = 'SET_CHAR';\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\n\nexport default function CharCard({ title, image }) {\n  return (\n    <Card\n      image={image}\n      header={title}\n    />\n  );\n}\n","import React, { useState, useRef, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useRMScroll from '../useRMScroll';\nimport { setCharAC } from '../redux/actions';\nimport CharCard from '../components/CharCard';\n\nexport default function FirstPage() {\n  const [pageNumber, setPageNumber] = useState(1);\n  const { loading, error, chars } = useRMScroll(pageNumber);\n  const observer = useRef();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const lastCharRef = useCallback((node) => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) {\n        setPageNumber((prev) => prev + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading]);\n\n  const redirectHandler = (char) => {\n    dispatch(setCharAC(char));\n    const path = '/details';\n    history.push(path);\n  };\n\n  return (\n    <div className=\"cards-wrapper\">\n      {chars.map((el, index) => {\n        if (chars.length === index + 1) {\n          return (\n            <div\n              className=\"card\"\n              key={el.id}\n              ref={lastCharRef}\n              onClick={() => redirectHandler(el)}>\n              <CharCard title={el.name} image={el.image} />\n            </div>\n          );\n        }\n        return (\n          <div\n            className=\"card\"\n            key={el.id}\n            onClick={() => redirectHandler(el)}>\n            <CharCard title={el.name} image={el.image} />\n          </div>\n        );\n      })}\n      {loading && 'loading'}\n      {error && 'error'}\n    </div>\n  );\n}\n","import { SET_CHAR } from './actionTypes';\n\nexport const setCharAC = (char) => ({\n  type: SET_CHAR,\n  payload: {\n    char\n  }\n});\n","import React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\n\nexport default function CharDetails(props) {\n  const extraText = `Status: ${props.status}`;\n  let extra = '';\n\n  if (props.status === 'Alive') {\n    extra = (\n      <span>\n        <Icon name=\"circle\" color=\"green\" />\n        {extraText}\n      </span>\n    );\n  } else if (props.status === 'Dead') {\n    extra = (\n      <span>\n        <Icon name=\"circle\" color=\"red\" />\n        {extraText}\n      </span>\n    );\n  } else {\n    extra = (\n      <span>\n        <Icon name=\"circle\" />\n        {extraText}\n      </span>\n    );\n  }\n\n  return (\n    <Card\n      image={props.image}\n      header={props.title}\n      meta={props.gender}\n      description={props.location.name}\n      extra={extra}\n    />\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport CharDetails from '../components/CharDetails';\n\nexport default function SecondPage() {\n  const state = useSelector((state) => state);\n\n  return (\n    <div className=\"cards-wrapper\">\n\n      {!state.char && <span>No character selected</span>}\n\n      {state.char && (\n      <CharDetails\n        title={state.char.name}\n        image={state.char.image}\n        gender={state.char.gender}\n        status={state.char.status}\n        location={state.char.location}\n      />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  HashRouter, Route, Link, Switch,\n} from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport FirstPage from './pages/FirstPage';\nimport SecondPage from './pages/SecondPage';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <>\n        <Menu color=\"green\" inverted widths={5}>\n          <Menu.Item>\n            <Link to=\"/\">Scroll</Link>\n          </Menu.Item>\n\n          <Menu.Item>\n            <Link to=\"/details\">Details</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {' '}\n            <FirstPage />\n            {' '}\n          </Route>\n          <Route exact path=\"/details\">\n            {' '}\n            <SecondPage />\n            {' '}\n          </Route>\n        </Switch>\n\n      </>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_CHAR } from './actionTypes';\n\nconst initState = {};\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case SET_CHAR:\n      return {\n        ...state,\n        char: action.payload.char,\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}